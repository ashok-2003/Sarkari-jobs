generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  name          String?
  email         String?  @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  bookmarks     Bookmark[]
  appliedJobs   AppliedJob[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  @@unique([identifier, token])
}

model Job {
  id          String   @id @default(cuid())
  title       String
  description String
  category    String
  imageUrl    String?
  postedAt    DateTime @default(now())
  bookmarks   Bookmark[]
  appliedJobs AppliedJob[]
}

model Bookmark {
  id     String @id @default(cuid())
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  job    Job    @relation(fields: [jobId], references: [id], onDelete: Cascade)
  jobId  String
}

model AppliedJob {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  job       Job      @relation(fields: [jobId], references: [id], onDelete: Cascade)
  jobId     String
  appliedAt DateTime @default(now())
}




// Additional models for various items
model JobItem {
  id        String   @id @default(cuid()) 
  href      String   @unique 
  text      String   
  last_date String?  
  description String?  

  // Automatic timestamps for when the record was created and last updated
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ResultItem {
  id        String   @id @default(cuid())
  href      String   @unique 
  text      String   
  description String?  

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AdmissionItem {
  id        String   @id @default(cuid())
  href      String   @unique 
  text      String   
  last_date String? 
  description String?  

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AnswerKeyItem {
  id        String   @id @default(cuid())
  href      String   @unique 
  text      String  
  description String?  

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AdmitCardItem {
  id        String   @id @default(cuid())
  href      String   @unique 
  text      String 
  description String?  
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SyllabusItem {
  id        String   @id @default(cuid())
  href      String   @unique 
  text      String  
  description String?  

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
